strsplit(fruit, split = " ")
source('~/.active-rstudio-document')
install.packages('tidyverse')
head(iris)
summary(iris)
?plot
plot(iris$Sepal.Width, iris$Sepal.Length)
library(ggplot2)
?mpg
head(mpg)
?geom_point
g = ggplot(mpg, aes(x=displ,y=hwy))+geom_point()+
geom_smooth(method = "lm")
g + geom_point(aes(alpha = class))
g = ggplot(mpg, aes(x=displ,y=hwy))
install.packages
install.packages("shiny")
install.packages(“ggplot2”)
install.packages(“ggplot2”)
install.packages("ggplot2")
library(ggplot2)
library(googleVis)
install.packages("googleVis")
install.packages("leaflet")
library(tidyverse)
library(dbplyr)
install.packages(“ggplot2”)
library(ggplot2)
library(xlsx)
install.packages(xlsx)
install.packages(xlsx)
library(xlsx)
library(tidyverse)
install(tidyverse)
raw.df <- readr::read_csv("./data.csv")
library(tidyverse)
raw.df <- readr::read_csv("./data.csv")
colnames()
colnames(cuisine description)
names(my.data)
names(data.csv)
names(data)
data()
data.csv
names(raw.df)[names(daw.df)=="CAMIS"]            <- "Camis"
names(raw.df)[names(raw.df)=="CAMIS"]            <- "Camis"
names(raw.df)[names(raw.df)=="DBA"]            <- "Dba"
names(raw.df)[-1:-26] <- tolower(names(raw.df)[-1:-26])
names(raw.df)[names(raw.df)=="inspection date"]            <- "inspection.date"
load_csv_online.R
get_url <- function(year, quarter){
url = paste0(
"https://projects.propublica.org/congress/assets/staffers/",
year, quarter,
"-house-disburse-detail.csv"
)
return(url)
}
View(get_url)
load_file_get_fname <- function(year, quarter){
url = get_url(year, quarter)
result = tryCatch(
{
print(paste0("Downloading for ", year, " ", quarter))
read.csv(url)
},
error = function(e) {
print(paste0("The url might not exist, no data for ", year, quarter, " is loaded."))
NULL}
)
fname = paste0(year, "-", quarter, ".csv")
path = paste0("./data/", fname)
if(length(result)!=0){
write.csv(result, path, row.names = FALSE)
} else {
fname = NULL
}
return(fname)
}
install.packages("shiny")
install(shinydashboard)
install.packages("shinydashboard")
install.packages("shiny")
shiny::runApp('Desktop/APP')
runApp('Desktop/APP')
runApp('Desktop/APP')
runApp('Desktop/APP')
library(ggplot2)
library(tidyr)
melt(dataset)
library(reshape)
install.packages("reshape")
melt(dataset)
library(reshape)
melt(dataset)
df = melt(dataset)
View(df)
df[order(df$Name)]
df[order(df$Name),]
df = df[order(df$Name),]
class(df$variable)
colnames(df) = c('Name', 'Code', 'Type', 'Indicator.Name', 'Year', 'Expenditure.In.USD')
df[-4]
df = df[-4]
View(df)
as.numeric(df$Year)
as.character(df$Year)
gsub('X', '', as.character(df$Year))
as.numeric(gsub('X', '', as.character(df$Year)))
df$Year = as.numeric(gsub('X', '', as.character(df$Year)))
write.csv('./Military_Expenditure_clean.csv')
write.csv(df, './Military_Expenditure_clean.csv')
setwd("~/Desktop/APP")
write.csv(df, './Military_Expenditure_clean.csv')
library(ggplot2)
df = read.csv('./Military_Expenditure_clean.csv')
ggplot(df, aes(x=Year, y=Expenditure.In.USD)) %>% geom_bar(stat='identity')
View(df)
ggplot(df) %>% geom_bar(aes(x=Year, y=Expenditure.In.USD), stat='identity')
ggplot(df, aes(x=Year, y=Expenditure.In.USD)) + geom_bar(stat='identity')
df %>% filter(Name == 'Albania') %>% ggplot(aes(x=Year, y=Expenditure.In.USD)) + geom_bar(stat='identity')
df %>% filter(Name %in% c('Albania','Austria')) %>% ggplot(aes(x=Year, y=Expenditure.In.USD, fill=Name)) + geom_bar(stat='identity', position='dodge')
runApp()
install.packages("plotly")
ggplotly(df %>% filter(Name %in% c('Albania','Austria')) %>% ggplot(aes(x=Year, y=Expenditure.In.USD, fill=Name)) + geom_bar(stat='identity', position='dodge'))
library(plotly)
ggplotly(df %>% filter(Name %in% c('Albania','Austria')) %>% ggplot(aes(x=Year, y=Expenditure.In.USD, fill=Name)) + geom_bar(stat='identity', position='dodge'))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
head(df)
head(df)
runApp()
head(df)
head(df)
head(df)
head(df)
df %>% filter(Year==2018, Type=="Country") %>%
top_n(n=5, wt=Expenditure.In.USD)
runApp()
df$X = NULL
df %>% filter(Year==2018, Type=="Country") %>%
top_n(n=5, wt=Expenditure.In.USD)
df %>% filter(Year==2018, Type=="Country") %>%
top_n(n=5, wt=Expenditure.In.USD) %>%
arrange(Expenditure.In.USD)
df %>% filter(Year==2018, Type=="Country") %>%
top_n(n=5, wt=Expenditure.In.USD) %>%
arrange(-Expenditure.In.USD)
shinyServer(function(input,output, session){
output$country_comparison <- renderPlotly({
ggplotly(df %>%
filter(Name %in% c(input$country1,input$country2)) %>%
ggplot(aes(x=Year, y=Expenditure.In.USD, fill=Name)) +
geom_bar(stat='identity', position='dodge'))
})
df$X = NULL
top2018 = df %>% filter(Year==2018, Type=="Country") %>%
top_n(n=5, wt=Expenditure.In.USD) %>%
arrange(-Expenditure.In.USD)
})
top2018 %>% ggplot(aes(x=Name, y=Expenditure.In.USD))
top2018 = df %>% filter(Year==2018, Type=="Country") %>%
top_n(n=5, wt=Expenditure.In.USD) %>%
arrange(-Expenditure.In.USD)
top2018 %>% ggplot(aes(x=Name, y=Expenditure.In.USD))
top2018 %>% ggplot(aes(x=Name, y=Expenditure.In.USD)) + geom_col()
top2018 %>% ggplot(aes(x=Name, y=Expenditure.In.USD, fill=Code)) + geom_col()
top2018 = df %>% filter(Year==2018, Type=="Country") %>%
top_n(n=5, wt=Expenditure.In.USD) %>%
arrange(-Expenditure.In.USD)
top2018 %>% ggplot(aes(x=reorder(Name,Expenditure.In.USD), y=Expenditure.In.USD, fill=Code)) + geom_col()
.In.USD)
top2018 %>% ggplot(aes(x=reorder(Name,-Expenditure.In.USD), y=Expenditure.In.USD, fill=Code)) + geom_col()
options(scipen = 999)
top2018 = df %>% filter(Year==2018, Type=="Country") %>%
top_n(n=5, wt=Expenditure.In.USD) %>%
arrange(-Expenditure.In.USD)
top2018 %>% ggplot(aes(x=reorder(Name,-Expenditure.In.USD), y=Expenditure.In.USD, fill=Code)) + geom_col() +
labs(x="",title = "Top 5 Spenders in 2018")
top2018 %>% ggplot(aes(x=reorder(Name,-Expenditure.In.USD), y=Expenditure.In.USD, fill=Code)) + geom_col() +
labs(x="",title = "Top 5 Spenders in 2018 in Billions of USD")
arrange(-Expenditure.In.USD)
top2018 %>% ggplot(aes(x=reorder(Name,-Expenditure.In.USD), y=Expenditure.In.USD, fill=Code)) + geom_col() +
labs(x="",title = "Top 5 Spenders in 2018 in (Billions of USD)")
top2018 %>% ggplot(aes(x=reorder(Name,-Expenditure.In.USD), y=Expenditure.In.USD, fill=Code)) + geom_col() +
labs(x="",title = "Top 5 Spenders in 2018 (in Billions of USD)")
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
